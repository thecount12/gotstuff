## custom package modules

https://golangbot.com/go-packages/

We will place everything in this directory 

mkdir learnpackage
cd learnpackage
touch main.go

	package main
	import "fmt"
	func main() {
		fmt.Println("simple interest calculation")
	}


You can compile by doing 'go install' or go build main.go or simply run it 'go run main.go'

Turn this into module you must be inside /learnpackage and type

	go mod init learnpackage
	cpu% cat go.mod
	module learnpackage

	go 1.18


But lets create a custom package called simpleinterest
Here is the file structure

|----learnpacakge
|---|----go.mod
	|----main.go
	|----simpleinterest
		|----simpleinterest.go

	mkdir simpleinterest
	cd simpleinterest
	touch simpleinterest.go

Add the following to simpleinterest.go

	package simpleinterest
	// Calculate calculates and returns the simple interest 
	// for a principal p, rate of interest r for time duration t years

	func Calculate(p float64, r float64, t float64) float64 {  
 	    interest := p * (r / 100) * t
 	    return interest
 	}

Note the function must start with Caps. To use custom package import it as follows
go back to main.go and import it as follows

	package main
	import (
		"fmt"
		"learnpackage/simpleinterest"
	)
	func main() {
		fmt.Println("simple interest calculation")
		p := 5000.0
		r := 10.0
		t := 1.0
		si := simpleinterest.Calculate(p, r, t)
		fmt.Println("Simple interest is", si)
	}

Now run go build main.go. Example commands below

	cpu% go build main.go
	cpu% ls
	go.mod
	main
	main.go
	simpleinterest
	cpu% ./main
	simple interest calculation
	Simple interest is 500
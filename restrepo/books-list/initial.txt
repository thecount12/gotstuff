package main

// go mod init books-list
// go get -u github.com/gorilla/mux
// go get github.com/subosito/gotenv
// pq   go get github.com/lib/pq

/* make one function then copy and paste
 * func getBooks(w http.ResponseWriter, r *http.Request) {
	log.Println("Get all books is called")
}

after basic functions go build run
visit: http://localhost:8000/books
* http://localhost:8000/books/1
2022/08/19 17:29:33 Get all books is called
etc...

*/



import (
	//"encoding/json"
	"fmt"
	"log"
	"net/http"
	"github.com/gorilla/mux"
)

type Book struct {
	ID 		int		`json:"id"`
	Title 	string	`json:"title"`
	Author	string	`json:"author"`
	Year	string	`json:"year"`
}

func main() {
	fmt.Println("cool")
	
	// copy and paste from gorilla but add Methods("GET")
	router := mux.NewRouter()
	
	router.HandleFunc("/books", getBooks).Methods("GET")
    router.HandleFunc("/books/{id}", getBook).Methods("GET")
    router.HandleFunc("/books/{id}", addBook).Methods("POST")
    router.HandleFunc("/books", updateBook).Methods("PUT")
    router.HandleFunc("/books/{id}", removeBook).Methods("DELETE")
    
	// start the server
	// http.ListenAndServe(":8000", router)
	log.Fatal(http.ListenAndServe(":8000", router))
}

func getBooks(w http.ResponseWriter, r *http.Request) {
	log.Println("Get all books is called")
}

func getBook(w http.ResponseWriter, r *http.Request) {
	log.Println("Get book is called")
}

func addBook(w http.ResponseWriter, r *http.Request) {
	log.Println("Add book is called")
}

func updateBook(w http.ResponseWriter, r *http.Request) {
	log.Println("Update book is called")
}

func removeBook(w http.ResponseWriter, r *http.Request) {
	log.Println("Remove book is called")
}







